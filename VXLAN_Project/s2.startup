#!/bin/bash
# s2.startup - Switch VXLAN
# Riceve traffico VXLAN da s3 e lo converte in traffico locale

echo "=== s2 VXLAN Switch Configuration ==="

# Configurazione interfacce fisiche
ip link set dev eth0 up  # verso h2a (Tenant A)
ip link set dev eth1 up  # verso h2b (Tenant B)
ip link set dev eth2 up  # verso h2c (Tenant C)
ip link set dev eth3 up  # verso r1 (VXLAN transport)

# Configurazione IP per trasporto VXLAN
ip addr add 10.0.2.2/24 dev eth3

# Installazione strumenti
apt-get update > /dev/null 2>&1
apt-get install -y bridge-utils tcpdump > /dev/null 2>&1

# Abilitazione IP forwarding
echo 1 > /proc/sys/net/ipv4/ip_forward

# Routing verso s3 (via r1)
ip route add 10.0.1.0/24 via 10.0.2.1 dev eth3

# ================================================================
# TENANT A: VXLAN VNI 100 → Local Bridge
echo "Configurazione Tenant A (VXLAN VNI 100)..."

# Creazione bridge per Tenant A
ip link add br-100 type bridge
ip link set br-100 up

# Creazione VXLAN per Tenant A
ip link add vxlan100 type vxlan \
    id 100 \
    remote 10.0.1.3 \
    dev eth3 \
    dstport 4789 \
    learning

ip link set vxlan100 up

# Collegamento host e VXLAN al bridge
ip link set eth0 master br-100        # host h2a
ip link set vxlan100 master br-100    # VXLAN da s3

# ================================================================
# TENANT B: VXLAN VNI 200 → Local Bridge
echo "Configurazione Tenant B (VXLAN VNI 200)..."

# Creazione bridge per Tenant B
ip link add br-200 type bridge
ip link set br-200 up

# Creazione VXLAN per Tenant B
ip link add vxlan200 type vxlan \
    id 200 \
    remote 10.0.1.3 \
    dev eth3 \
    dstport 4789 \
    learning

ip link set vxlan200 up

# Collegamento host e VXLAN al bridge
ip link set eth1 master br-200        # host h2b
ip link set vxlan200 master br-200    # VXLAN da s3

# ================================================================
# TENANT C: VXLAN VNI 300 → Local Bridge
echo "Configurazione Tenant C (VXLAN VNI 300)..."

# Creazione bridge per Tenant C
ip link add br-300 type bridge
ip link set br-300 up

# Creazione VXLAN per Tenant C
ip link add vxlan300 type vxlan \
    id 300 \
    remote 10.0.1.3 \
    dev eth3 \
    dstport 4789 \
    learning

ip link set vxlan300 up

# Collegamento host e VXLAN al bridge
ip link set eth2 master br-300        # host h2c
ip link set vxlan300 master br-300    # VXLAN da s3

# ================================================================
# CONFIGURAZIONE FDB ENTRIES
sleep 3

# FDB entries per VXLAN
bridge fdb append 00:00:00:00:00:00 dev vxlan100 dst 10.0.1.3
bridge fdb append 00:00:00:00:00:00 dev vxlan200 dst 10.0.1.3
bridge fdb append 00:00:00:00:00:00 dev vxlan300 dst 10.0.1.3

echo ""
echo "=== s2 VXLAN Switch Configuration Complete ==="
echo "=============================================="
echo "VXLAN Configuration:"
echo "- VXLAN VNI 100 (Tenant A): eth0 (h2a) ↔ vxlan100 (from s3)"
echo "- VXLAN VNI 200 (Tenant B): eth1 (h2b) ↔ vxlan200 (from s3)"
echo "- VXLAN VNI 300 (Tenant C): eth2 (h2c) ↔ vxlan300 (from s3)"
echo ""
echo "Bridge Status:"
echo "Tenant A (VNI 100):"
brctl show br-100
echo ""
echo "Tenant B (VNI 200):"
brctl show br-200
echo ""
echo "Tenant C (VNI 300):"
brctl show br-300
echo ""
echo "VXLAN Interfaces:"
ip link show | grep vxlan
echo ""
echo "Network Configuration:"
ip addr show dev eth3
echo ""
echo "Routes:"
ip route show
echo ""
echo "=============================================="
echo "MONITORING Commands:"
echo "- All VXLAN traffic: tcpdump -i eth3 port 4789 -v"
echo "- VNI 100: tcpdump -i eth3 port 4789 | grep 'vni 100'"
echo "- VNI 200: tcpdump -i eth3 port 4789 | grep 'vni 200'"
echo "- VNI 300: tcpdump -i eth3 port 4789 | grep 'vni 300'"
echo ""
echo "Local Traffic:"
echo "- Tenant A: tcpdump -i eth0"
echo "- Tenant B: tcpdump -i eth1"
echo "- Tenant C: tcpdump -i eth2"
echo ""
echo "Bridge Learning:"
echo "- bridge fdb show dev vxlan100"
echo "- bridge fdb show dev vxlan200"
echo "- bridge fdb show dev vxlan300"
echo "=============================================="